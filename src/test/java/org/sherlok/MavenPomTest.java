/**
 * Copyright (C) 2014-2015 Renaud Richardet
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sherlok;

import static org.junit.Assert.assertTrue;
import static org.sherlok.utils.AetherResolver.LOCAL_REPO_PATH;
import static org.sherlok.utils.Create.set;

import java.io.File;
import java.nio.charset.Charset;

import org.junit.Test;
import org.sherlok.mappings.BundleDef;
import org.sherlok.utils.MavenPom;

import com.google.common.io.Files;

public class MavenPomTest {

    @Test
    public void test() throws Exception {

        BundleDef bundle = new Controller().load().getBundleDef(
                "dkpro.opennlp.en:1.6.2");
        MavenPom.writePom(set(bundle), "test", "1");

        File pomFile = new File(LOCAL_REPO_PATH
                + "/org/sherlok/test/1/test-1.pom");
        assertTrue(pomFile.exists());

        String pom = Files.toString(pomFile, Charset.defaultCharset());
        assertTrue(pom.contains("Automatically generated by Sherlok at"));
        assertTrue(pom.contains("<groupId>org.sherlok</groupId>"));
        assertTrue(pom.contains("<artifactId>test</artifactId>"));

        pomFile.delete();
    }
}
